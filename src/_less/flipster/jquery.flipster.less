@import "lesshat";
@import "../_base/_variables";

	@animationSpeed: 350ms;

/* @group Base Flipster Styles */
	
	.flipster {
		display: block;
		margin: 0 auto;
		width: 100%;
		position: relative;
		overflow-x: hidden;
		overflow-y: visible;
	}
		
	.flip-items,
	.flip-item {
		display: block;
		margin: 0 auto;
		padding: 0;
		list-style-type: none;
	}
	
	.flip-items {
		width: 100%;
		.transform(translate3d(0,0,0));
		.transform-origin(50% 50%);
		.backface-visibility(hidden);
	}
	
		.flip-item {
			position: absolute;
			opacity: 0.99; /* Fix for strange clipping behavior on rotated elements in Chrome. */
		}
		
		.flip-past,
		.flip-future,
		.flip-next,
		.flip-prev { 
			cursor: pointer;
		}
		
			.flip-item img {
				display: block;
				width: 100%;
			}

/* @end */

////////////////////////////////////////

/* @group Coverflow Style */
	
	.flipster-coverflow {
		.flip-items {
			.transition(all @animationSpeed ease-in-out);
			position: relative;
			padding-top: 2%;
			padding-bottom: 5%; // To compensate for reflection
		}
		
		.flip-item {
			display: block;
			.transition(all @animationSpeed/2 ease-in-out);
			.transform-origin(50% 50%);
			.perspective(800px);
			position: absolute;
			width: 30%;
		}
		
		.flip-content {
			.transition(all @animationSpeed ease-in-out);
			-webkit-box-reflect: below 0 -webkit-gradient( linear, left bottom, left top, color-stop(0.05, rgba(255,255,255,0.12)), color-stop(0.2, transparent));
		}
		
		.flip-past .flip-content {
			.transform(rotateY(55deg) scale(0.75)); 
		}
		
		.flip-future .flip-content  {
			.transform(rotateY(-55deg) scale(0.75)); 
		}
		
		.flip-current .flip-content {
			.transform(rotateY(0deg));
		}
				
		.flip-hidden {
			visibility: hidden;
			.opacity(0);
//			.transform(scale(0.5));
//			.transition-delay(@animationSpeed/3);
		}
	}
	
/* @end */

////////////////////////////////////////

/* @group Flip Items */
	
	.flipster-carousel {
	
		.flip-items {
			.perspective(2000px);
		}
		
		.flip-item {
			.transform(translate3d(0,0,0));
			.transition(all @animationSpeed ease-out);
			.no-csstransforms & { .transition(none); }
		}
		
		.flip-items img { .box-shadow(0 0 10px fade(#000,30%)); }
		
		@farTranslateX: 80%;
		@farTranslateZ: 0;
		@farRotateY: 80deg;
		@farScale: 0.65;
		
		@nearTranslateX: 60%;
		@nearTranslateZ: 0;
		@nearRotateY: 80deg;
		@nearScale: 0.8;
		
		.flip-past {
			.transform(translateX(-1*@farTranslateX) translateZ(@farTranslateZ) rotateY(@farRotateY) scale(@farScale));

			.no-csstransforms3d & { .transform(translateX(-0.7*@farTranslateX) scale(0.50)); }
			.no-csstransforms & { left: -0.25*@farTranslateX; top: 40%; width: 50%; height: 50%; }
		}
		
		.flip-future {
			.transform(translateX(@farTranslateX) translateZ(@farTranslateZ) rotateY(-1*@farRotateY) scale(@farScale));

	
			.no-csstransforms3d & { .transform(translateX(0.7*@farTranslateX) scale(0.50)); }
			.no-csstransforms & { left: 1.1*@farTranslateX; top: 40%; width: 50%; height: 50%; }
		}
		
		.flip-prev {
			.transform(translateX(-1*@nearTranslateX) translateZ(@nearTranslateZ) rotateY(@farRotateY) scale(@nearScale));

			.no-csstransforms3d & { .transform(translateX(-0.4*@nearTranslateX) scale(0.75)); }
			.no-csstransforms & { left: -0.15*@nearTranslateX; top: 20%; width: 75%; height: 75%; }
		}
		
		.flip-next {
			.transform(translateX(@nearTranslateX) translateZ(@nearTranslateZ) rotateY(-1*@nearRotateY) scale(@nearScale));
			
			.no-csstransforms3d & { .transform(translateX(0.4*@nearTranslateX) scale(0.75)); }
			.no-csstransforms & { left: 0.65*@nearTranslateX; top: 20%; width: 75%; height: 75%; }
		}
		
		.flip-past,
		.flip-future {
			.opacity(0.60);
			z-index: 1;
			.transition-delay(@animationSpeed/4);
		}
		
		.flip-prev,
		.flip-next {
			.opacity(0.80);
			z-index: 2;
			.transition-delay(@animationSpeed/6);
		}
		
		.flip-current {
			z-index: 999;
			.transform(rotateY(0deg));
			.transition-delay(@animationSpeed/6);
		}
		
		.flip-hidden {
			visibility: hidden;
			.opacity(0);
			.transform(rotateY(0deg) translateX(0) scale(0.5));
			.transition-delay(@animationSpeed/3);
		}
	}
	
	/* @end */
	
	.no-transition {
		.transition-duration(~"0ms !important");
	}
	
/* @end */
